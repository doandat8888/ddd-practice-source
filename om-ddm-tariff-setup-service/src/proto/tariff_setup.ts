// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.6.1
//   protoc               v5.29.2
// source: tariff_setup.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";

export const protobufPackage = "tariff_setup";

export interface GetTariffRequest {
  tariffId: string;
}

export interface GetTariffResponse {
  tariffId: string;
  rate: number;
}

export interface CreateTariffRequest {
  tariffId: string;
  rate: number;
}

export interface CreateTariffResponse {
  success: boolean;
  message: string;
}

export const TARIFF_SETUP_PACKAGE_NAME = "tariff_setup";

export interface TariffSetupServiceClient {
  getTariff(request: GetTariffRequest): Observable<GetTariffResponse>;

  createTariff(request: CreateTariffRequest): Observable<CreateTariffResponse>;
}

export interface TariffSetupServiceController {
  getTariff(request: GetTariffRequest): Promise<GetTariffResponse> | Observable<GetTariffResponse> | GetTariffResponse;

  createTariff(
    request: CreateTariffRequest,
  ): Promise<CreateTariffResponse> | Observable<CreateTariffResponse> | CreateTariffResponse;
}

export function TariffSetupServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ["getTariff", "createTariff"];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("TariffSetupService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("TariffSetupService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const TARIFF_SETUP_SERVICE_NAME = "TariffSetupService";
